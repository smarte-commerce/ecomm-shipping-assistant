[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-shopping-assistant"
version = "1.0.0"
description = "AI-powered shopping assistant microservice with intelligent product recommendations and discount management"
authors = [
    {name = "Shopping Assistant Team", email = "team@shoppingassistant.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["ai", "shopping", "assistant", "microservice", "fastapi", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "SQLAlchemy==2.0.23",
    "pandas==2.1.3",
    "numpy==1.24.3",
    "scikit-learn==1.3.2",
    "transformers==4.35.2",
    "torch==2.1.1",
    "spacy==3.7.2",
    "redis==5.0.1",
    "pydantic[dotenv]==2.5.0",
    "httpx==0.25.2",
    "asyncio-redis==0.16.0",
    "python-multipart==0.0.6",
    "python-dotenv==1.0.0",
    "structlog==23.2.0",
    "openai==1.3.6",
    "anthropic==0.7.8",
    "gunicorn==21.2.0",
    "python-dateutil==2.8.2",
    "orjson==3.9.10",
    "passlib[bcrypt]==1.7.4",
    "python-jose[cryptography]==3.3.0",
    "alembic==1.12.1"
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "black==23.11.0",
    "flake8==6.1.0",
    "isort==5.12.0",
    "mypy==1.7.0",
    "pre-commit==3.5.0"
]
docs = [
    "mkdocs==1.5.3",
    "mkdocs-material==9.4.8",
    "mkdocstrings[python]==0.24.0"
]

[project.urls]
Homepage = "https://github.com/yourorg/ai-shopping-assistant"
Documentation = "https://yourorg.github.io/ai-shopping-assistant"
Repository = "https://github.com/yourorg/ai-shopping-assistant.git"
Issues = "https://github.com/yourorg/ai-shopping-assistant/issues"

[project.scripts]
shopping-assistant = "app.main:app"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "ai: marks tests that require AI API keys",
]

# Coverage configuration
[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "spacy.*",
    "sklearn.*",
    "redis.*",
    "openai.*",
    "anthropic.*",
]
ignore_missing_imports = true 